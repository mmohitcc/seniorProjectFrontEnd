{"ast":null,"code":"var _jsxFileName = \"/Users/mohit/Desktop/Senior Project Copy/Senior Project/src/views/TweetList.jsx\";\n\n/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Table } from \"react-bootstrap\";\nimport axios from 'axios';\nimport Card from \"components/Card/Card.jsx\";\nimport { thArray, tdArray } from \"variables/Variables.jsx\";\n\nclass TweetList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [[\"TSLA\", \"TWEETY\", \"0\"]],\n      companyList: [\"Tesla\", \"Amazon\", \"General Electric\", \"Apple\", \"Johnson & Johnson\", \"JPMorgan\", \"Tesla\", \"Google\", \"Walmart\", \"Exxon\"]\n    };\n  }\n\n  componentDidMount() {\n    const axiosSp = axios.create({\n      baseURL: 'https://seniorprojectu.herokuapp.com/graphql'\n    });\n    const getTweets = \"\\n    query{\\n      recentTweets(ticker:\\\"Exxon\\\"){\\n              tweet\\n              rating\\n          }\\n      }\\n    \";\n    const tweetData = []; // loop through all the companies\n\n    this.state.companyList.map(company => {\n      const companyTweets = \"\\n        query{\\n          recentTweets(ticker: \\\"\".concat(company, \"\\\"){\\n                  tweet\\n                  rating\\n              }\\n          }\\n        \");\n      axiosSp.post('', {\n        query: companyTweets\n      }).then(result => {\n        // this.setState({data: result})\n        const tweets = result['data']['data']['recentTweets']; //   console.log(tweets)\n\n        const a = tweets.map(a => {\n          let b = [];\n          b.push(company);\n          b.push(a.tweet);\n          b.push(a.rating);\n          tweetData.push(b);\n        }); //   console.log(tweetData);\n      });\n    });\n    this.setState({\n      data: tweetData\n    }); // axiosSp\n    // .post('', {query: getTweets})\n    // .then(result  => {\n    //   // this.setState({data: result})\n    //   const tweets = result['data']['data']['recentTweets'];\n    //   console.log(tweets)\n    //   const a = tweets.map(a => {\n    //     let b = []\n    //     b.push(\"AMAZON\")\n    //     b.push(a.tweet)\n    //     b.push(a.rating)\n    //     tweetData.push(b)\n    //   });\n    //   console.log(tweetData);\n    //   this.setState({data: tweetData})\n    // }\n    // );\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"content\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(Card, {\n      title: \"Tweets\",\n      category: \"Recently Analyzed Tweets\",\n      ctTableFullWidth: true,\n      ctTableResponsive: true,\n      content: React.createElement(Table, {\n        striped: true,\n        hover: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, thArray.map((prop, key) => {\n        return React.createElement(\"th\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122\n          },\n          __self: this\n        }, prop);\n      }))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, this.state.data.map((prop, key) => {\n        return React.createElement(\"tr\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129\n          },\n          __self: this\n        }, prop.map((prop, key) => {\n          return React.createElement(\"td\", {\n            key: key,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 131\n            },\n            __self: this\n          }, prop);\n        }));\n      }))),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default TweetList;","map":{"version":3,"sources":["/Users/mohit/Desktop/Senior Project Copy/Senior Project/src/views/TweetList.jsx"],"names":["React","Component","Grid","Row","Col","Table","axios","Card","thArray","tdArray","TweetList","constructor","props","state","data","companyList","componentDidMount","axiosSp","create","baseURL","getTweets","tweetData","map","company","companyTweets","post","query","then","result","tweets","a","b","push","tweet","rating","setState","render","prop","key"],"mappings":";;AAAA;;;;;;;;;;;;;;;;;AAiBA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,EAAeC,GAAf,EAAoBC,GAApB,EAAyBC,KAAzB,QAAsC,iBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,SAASC,OAAT,EAAkBC,OAAlB,QAAiC,yBAAjC;;AAEA,MAAMC,SAAN,SAAwBT,SAAxB,CAAkC;AAEhCU,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AAEA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CAAC,CAAC,MAAD,EAAS,QAAT,EAAmB,GAAnB,CAAD,CADK;AAEXC,MAAAA,WAAW,EAAE,CAAC,OAAD,EAAU,QAAV,EAAoB,kBAApB,EAAwC,OAAxC,EAAiD,mBAAjD,EAAsE,UAAtE,EAAkF,OAAlF,EAA2F,QAA3F,EAAqG,SAArG,EAAgH,OAAhH;AAFF,KAAb;AAID;;AAEDC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,OAAO,GAAGX,KAAK,CAACY,MAAN,CAAa;AAC3BC,MAAAA,OAAO,EAAE;AADkB,KAAb,CAAhB;AAIA,UAAMC,SAAS,+HAAf;AAUA,UAAMC,SAAS,GAAG,EAAlB,CAfiB,CAiBjB;;AACA,SAAKR,KAAL,CAAWE,WAAX,CAAuBO,GAAvB,CAA2BC,OAAO,IAAI;AAClC,YAAMC,aAAa,gEAGOD,OAHP,oGAAnB;AAUAN,MAAAA,OAAO,CACNQ,IADD,CACM,EADN,EACU;AAACC,QAAAA,KAAK,EAAEF;AAAR,OADV,EAECG,IAFD,CAEMC,MAAM,IAAK;AACf;AACA,cAAMC,MAAM,GAAGD,MAAM,CAAC,MAAD,CAAN,CAAe,MAAf,EAAuB,cAAvB,CAAf,CAFe,CAGjB;;AACE,cAAME,CAAC,GAAGD,MAAM,CAACP,GAAP,CAAWQ,CAAC,IAAI;AACxB,cAAIC,CAAC,GAAG,EAAR;AACAA,UAAAA,CAAC,CAACC,IAAF,CAAOT,OAAP;AACAQ,UAAAA,CAAC,CAACC,IAAF,CAAOF,CAAC,CAACG,KAAT;AACAF,UAAAA,CAAC,CAACC,IAAF,CAAOF,CAAC,CAACI,MAAT;AACAb,UAAAA,SAAS,CAACW,IAAV,CAAeD,CAAf;AACD,SANS,CAAV,CAJe,CAWjB;AAEC,OAfD;AAkBH,KA7BD;AA+BA,SAAKI,QAAL,CAAc;AAACrB,MAAAA,IAAI,EAAEO;AAAP,KAAd,EAjDiB,CAkDjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAED;;AAEDe,EAAAA,MAAM,GAAG;AACP,WACE;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,GAAD;AAAK,MAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AACE,MAAA,KAAK,EAAC,QADR;AAEE,MAAA,QAAQ,EAAC,0BAFX;AAGE,MAAA,gBAAgB,MAHlB;AAIE,MAAA,iBAAiB,MAJnB;AAKE,MAAA,OAAO,EACL,oBAAC,KAAD;AAAO,QAAA,OAAO,MAAd;AAAe,QAAA,KAAK,MAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG5B,OAAO,CAACc,GAAR,CAAY,CAACe,IAAD,EAAOC,GAAP,KAAe;AAC1B,eAAO;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAeD,IAAf,CAAP;AACD,OAFA,CADH,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKxB,KAAL,CAAWC,IAAX,CAAgBQ,GAAhB,CAAoB,CAACe,IAAD,EAAOC,GAAP,KAAe;AAClC,eACE;AAAI,UAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGD,IAAI,CAACf,GAAL,CAAS,CAACe,IAAD,EAAOC,GAAP,KAAe;AACvB,iBAAO;AAAI,YAAA,GAAG,EAAEA,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAeD,IAAf,CAAP;AACD,SAFA,CADH,CADF;AAOD,OARA,CADH,CARF,CANJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF,CADF;AAsED;;AAxJ+B;;AA2JlC,eAAe3B,SAAf","sourcesContent":["/*!\n\n=========================================================\n* Light Bootstrap Dashboard React - v1.3.0\n=========================================================\n\n* Product Page: https://www.creative-tim.com/product/light-bootstrap-dashboard-react\n* Copyright 2019 Creative Tim (https://www.creative-tim.com)\n* Licensed under MIT (https://github.com/creativetimofficial/light-bootstrap-dashboard-react/blob/master/LICENSE.md)\n\n* Coded by Creative Tim\n\n=========================================================\n\n* The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\n*/\nimport React, { Component } from \"react\";\nimport { Grid, Row, Col, Table } from \"react-bootstrap\";\nimport axios from 'axios'\n\nimport Card from \"components/Card/Card.jsx\";\nimport { thArray, tdArray } from \"variables/Variables.jsx\";\n\nclass TweetList extends Component {\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      data: [[\"TSLA\", \"TWEETY\", \"0\"]],\n      companyList: [\"Tesla\", \"Amazon\", \"General Electric\", \"Apple\", \"Johnson & Johnson\", \"JPMorgan\", \"Tesla\", \"Google\", \"Walmart\", \"Exxon\"]\n    }\n  }\n\n  componentDidMount(){\n    const axiosSp = axios.create({\n      baseURL: 'https://seniorprojectu.herokuapp.com/graphql',\n    });\n\n    const getTweets = \n    `\n    query{\n      recentTweets(ticker:\"Exxon\"){\n              tweet\n              rating\n          }\n      }\n    `\n\n    const tweetData = [];\n\n    // loop through all the companies\n    this.state.companyList.map(company => {\n        const companyTweets = \n        `\n        query{\n          recentTweets(ticker: \"${company}\"){\n                  tweet\n                  rating\n              }\n          }\n        `\n\n        axiosSp\n        .post('', {query: companyTweets})\n        .then(result  => {\n          // this.setState({data: result})\n          const tweets = result['data']['data']['recentTweets'];\n        //   console.log(tweets)\n          const a = tweets.map(a => {\n            let b = []\n            b.push(company)\n            b.push(a.tweet)\n            b.push(a.rating)\n            tweetData.push(b)\n          });\n        //   console.log(tweetData);\n          \n        }\n        );\n\n    });\n\n    this.setState({data: tweetData})\n    // axiosSp\n    // .post('', {query: getTweets})\n    // .then(result  => {\n    //   // this.setState({data: result})\n    //   const tweets = result['data']['data']['recentTweets'];\n    //   console.log(tweets)\n    //   const a = tweets.map(a => {\n    //     let b = []\n    //     b.push(\"AMAZON\")\n    //     b.push(a.tweet)\n    //     b.push(a.rating)\n    //     tweetData.push(b)\n    //   });\n    //   console.log(tweetData);\n    //   this.setState({data: tweetData})\n    // }\n    // );\n\n  }\n\n  render() {\n    return (\n      <div className=\"content\">\n        <Grid fluid>\n          <Row>\n            <Col md={12}>\n              <Card\n                title=\"Tweets\"\n                category=\"Recently Analyzed Tweets\"\n                ctTableFullWidth\n                ctTableResponsive\n                content={\n                  <Table striped hover>\n                    <thead>\n                      <tr>\n                        {thArray.map((prop, key) => {\n                          return <th key={key}>{prop}</th>;\n                        })}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {this.state.data.map((prop, key) => {\n                        return (\n                          <tr key={key}>\n                            {prop.map((prop, key) => {\n                              return <td key={key}>{prop}</td>;\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                }\n              />\n            </Col>\n\n            {/* <Col md={12}>\n              <Card\n                plain\n                title=\"Striped Table with Hover\"\n                category=\"Here is a subtitle for this table\"\n                ctTableFullWidth\n                ctTableResponsive\n                content={\n                  <Table hover>\n                    <thead>\n                      <tr>\n                        {thArray.map((prop, key) => {\n                          return <th key={key}>{prop}</th>;\n                        })}\n                      </tr>\n                    </thead>\n                    <tbody>\n                      {tdArray.map((prop, key) => {\n                        return (\n                          <tr key={key}>\n                            {prop.map((prop, key) => {\n                              return <td key={key}>{prop}</td>;\n                            })}\n                          </tr>\n                        );\n                      })}\n                    </tbody>\n                  </Table>\n                }\n              />\n            </Col> */}\n          </Row>\n        </Grid>\n      </div>\n    );\n  }\n}\n\nexport default TweetList;\n"]},"metadata":{},"sourceType":"module"}